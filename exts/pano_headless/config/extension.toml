[package]
# Semantic Versioning is used: https://semver.org/
version = "1.0.0"

# Lists people or organizations that are considered the "authors" of the package.
authors = ["NVIDIA"]

# The title and description fields are primarily for displaying extension info in UI
title = "pano_headless"
description="A simple python extension example to use as a starting point for your extensions."

# Path (relative to the root) or content of readme markdown file for UI.
readme  = "docs/README.md"

# URL of the extension source repository.
repository = ""

# One of categories for UI.
category = "Example"

# Keywords for the extension
keywords = ["kit", "example"]

# Location of change log file in target (final) folder of extension, relative to the root.
# More info on writing changelog: https://keepachangelog.com/en/1.0.0/
changelog="docs/CHANGELOG.md"

# Preview image and icon. Folder named "data" automatically goes in git lfs (see .gitattributes file).
# Preview image is shown in "Overview" of Extensions window. Screenshot of an extension might be a good preview image.
preview_image = "data/preview.png"

# Icon is shown in Extensions window, it is recommended to be square, of size 256x256.
icon = "data/icon.png"

# Use omni.ui to build simple UI
[dependencies]
# The Main UI App
"omni.kit.uiapp" = {}
"omni.kit.renderer.core" = {}

# Status Bar
"omni.kit.window.status_bar" = {}

"omni.create.app.resources" = {}
"omni.create.app.setup" = { order = 1000 } # we are running that at the end

# Splash runner
# "omni.kit.splash.carousel" = {}

"omni.stats" = {}

"omni.kit.telemetry" = {}

"omni.kit.menu.utils" = {}
"omni.kit.menu.file" = {}
"omni.kit.menu.edit" = {}
"omni.kit.menu.create" = {}
"omni.kit.menu.common" = {}
"omni.kit.menu.stage" = {}

"omni.kit.window.file" = {}
"omni.kit.context_menu" = {}

"omni.kit.selection" = {}
"omni.kit.stage_templates" = {}
"omni.kit.stage.mdl_converter" = {}

## PhysX
"omni.physx.bundle" = {}
"omni.physx.zerogravity" = {}

"omni.kit.search.service" = {}
"omni.kit.primitive.mesh" = {}

# Create Windows
"omni.kit.window.title" = {}
"omni.kit.widget.live" = {}
"omni.kit.window.stage" = {}
"omni.kit.widget.layers" = {}
"omni.kit.window.cursor" = {}
"omni.kit.window.toolbar" = {}

# New Viewport, load the default bundle of extensions
"omni.kit.viewport.bundle" = {}
# "omni.kit.viewport.menubar.lighting" = {}
# Load the RTX rendering bundle
# "omni.kit.viewport.rtx" = {}
# Load the Storm rendering bundle
# "omni.kit.viewport.pxr" = {}

# Additional Viewport features (legacy grid etc, HUD GPU stats)
# "omni.kit.viewport.legacy_gizmos" = {}
"omni.kit.viewport.ready" = {}
# "omni.hydra.engine.stats" = {}

# "omni.rtx.settings.core" = {} # this is the new Render Settings 2.0

"omni.kit.window.movie_capture" = {}
"omni.kit.capture.viewport" = {}

# "omni.kit.profiler.window" = {}

"omni.kit.stage_column.variant" = {}
"omni.kit.stage_column.payload" = {}

# Viewport Widgets and Collaboration
"omni.kit.viewport_widgets_manager" = {}
"omni.kit.collaboration.channel_manager" = {}
"omni.kit.collaboration.viewport.camera" = {}
"omni.kit.collaboration.selection_outline" = {}

"omni.kit.widgets.custom" = {}

# utils window
# "omni.kit.window.about" = {}
# "omni.kit.window.privacy" = {}
# "omni.kit.window.provide_feedback" = {}

# "omni.kit.material.library" = {}

# "omni.kit.window.imageviewer" = {}

# "omni.kit.widget.filebrowser" = {}
# "omni.kit.window.filepicker" = {}
# "omni.kit.window.content_browser" = {}

# "omni.kit.window.stats" = { order = 1000 }

# "omni.kit.window.script_editor" = {}
# "omni.kit.window.console" = {}

# "omni.kit.window.extensions" = {}

# NOTE: disable in production
# "omni.kit.window.jira" = {}
# "omni.kit.profiler.tracy" = {}

# browsers
# "omni.kit.browser.sample" = {}
# "omni.kit.browser.asset" = {}
# "omni.kit.browser.asset_store" = {}
# "omni.kit.browser.asset_provider.local" = {}
# "omni.kit.browser.asset_provider.sketchfab" = {}
# "omni.kit.browser.asset_provider.turbosquid" = {}
# "omni.kit.browser.asset_provider.actorcore" = {}
# "omni.simready.explorer" = { version = "1.0.26", exact = true }	# Locked by simready explorer team's request
# "omni.kit.browser.showcase" = {}

# "omni.kit.window.environment" = {}

# Material
# "omni.kit.window.material" = {}
# "omni.kit.browser.material" = {}
# "omni.kit.graph.delegate.default" = {}
# "omni.kit.window.material_graph" = {}

# "omni.kit.window.usd_paths" = {}
# "omni.kit.window.preferences" = { order = 1000 } # so the menu is in the correct place

"omni.kit.renderer.capture" = {}
"omni.kit.thumbnails.usd" = {}
#"omni.kit.thumbnails.images" = {}	# Disabled due to causing hang during tests

# bring all the property Widgets and Window
"omni.kit.window.property" = {}
"omni.kit.property.bundle" = {}
"omni.kit.property.layer" = {}
"omni.kit.commands" = {}
# tool
# "omni.kit.asset_converter" = {}
# "omni.kit.tool.asset_importer" = {}
# "omni.kit.tool.asset_exporter" = {}
# "omni.kit.tool.collect" = {}
# "omni.kit.tool.remove_unused.core" = {}
# "omni.kit.tool.remove_unused.controller" = {}

# Iray
"omni.iray.settings.core" = {}
"omni.hydra.iray" = { order = -1000 }

#Particle/PointCloud FileFormat
"omni.usd.fileformat.e57" = {}
"omni.kit.pointclouds" = { version = "1.1.2", exact = true }

# External Scene
# "omni.geo.streaming.bundle" = {}

# All QuickSearch
# "omni.kit.window.quicksearch" = {}

# "omni.kit.quicksearch.actions" = {}
# "omni.kit.quicksearch.settings" = {}

# "omni.kit.quicksearch.select" = {}
# "omni.kit.quicksearch.commands" = {}
# "omni.kit.quicksearch.menu" = {}
# "omni.kit.quicksearch.material" = {}
# "omni.kit.quicksearch.hdri" = {}
# "omni.kit.quicksearch.props" = {}

"omni.kit.search.files" = {}

# Compatibility Checker
"omni.kit.compatibility_checker" = {}

# VERSIONING
"omni.kit.widget.versioning" = {}

# Paint Default now
"omni.paint.system.bundle" = {}

# Manipulator
"omni.kit.manipulator.prim" = {}
"omni.kit.manipulator.transform" = {}
"omni.kit.manipulator.viewport" = {}
"omni.kit.manipulator.tool.mesh_snap" = {}

# Destruction schema
"omni.usd.schema.destruction" = {}

# Boom schema
"omni.schema.audio.boom" = {}

# Animation
"omni.anim.skelJoint" = {}
# "omni.skel" = {}
# "omni.anim.preview" = {}	# Disabled for release
"omni.anim.curve.bundle" = {}
"omni.kit.widget.timeline" = {}
"omni.anim.curve_editor" = {}
"omni.anim.window.timeline" = {}
"omni.anim.shared.core" = {}
"omni.anim.timeline" = {}
"omni.anim.graph.bundle" = {}
"omni.anim.graph.core" = {}
"omni.anim.graph.ui" = {}
"omni.anim.retarget.bundle" = {}
"omni.anim.retarget.core" = {}
"omni.anim.retarget.ui" = {}
"omni.anim.navigation.bundle" = {}
"omni.anim.navigation.core" = {}
"omni.anim.navigation.ui" = {}
"omni.anim.graph.schema" = {}
"omni.anim.navigation.schema" = {}

# OmniGraph
"omni.graph.bundle.action" = { version = "2.0.4", exact = true }
"omni.graph.window.action" = {}
"omni.graph.window.generic" = {}
"omni.graph.visualization.nodes" = {}
"omni.graph.action" = { version = "1.58.3", exact = true }

# Python Scripting Component
"omni.kit.scripting" = {}

# Curves
"omni.curve.manipulator" = {}

# General Proceduralism
"omni.genproc.bundle" = {}

# Sequencer
"omni.kit.window.sequencer" = {}

"omni.services.usd" = {}
"omni.services.transport.server.http" = {}

# SBSAR
"omni.kit.property.sbsar" = {}
"omni.usd.fileformat.sbsar" = {}

# Thumbnails
"omni.kit.thumbnails.mdl" = {}

# Quicklayout
"omni.kit.quicklayout" = {}

# AOV
"omni.kit.menu.aov" = {}

# Collections
"omni.kit.window.collection" = {}
"omni.kit.widget.collection" = {}
"omni.kit.property.collection" = {}

# Extended Searchfield
"omni.kit.widget.extended_searchfield" = {}

# Particle
"omni.particle.system.bundle" = {}

# Scene Visualization
"omni.scene.visualization.bundle" = {}

#Section Tool
"omni.kit.window.section" = {}

# startfleet auth enabled for cloud_share to work on the receiver
"omni.services.starfleet.auth" = {}

# Array Tool
"omni.tools.array" = {}
"omni.tools.pivot" = {}

# Randomizer
"omni.tools.randomizer" = {}

# Deepsearch
"omni.kit.browser.deepsearch" = {}

# Actions
"omni.kit.actions.window" = {}
"omni.kit.viewport.actions" = {}

# Scene Optimizer (formerly Data Adapter)
"omni.scene.optimizer.bundle" = { version = "105.1.8", exact = true }	# Temp locking due to dependency errors

# Asset Validator
"omni.asset_validator.core" = {}
"omni.asset_validator.ui" = {}

# Hotkeys
"omni.kit.hotkeys.window" = {}

# USDA
"omni.kit.usda_edit" = {}

# Measure Tool
"omni.kit.tool.measure" = {}

"omni.tools.distribute" = {}

"omni.kit.mesh.raycast" = {}

"omni.kit.stagerecorder.bundle" = {}

# Activity Monitor
"omni.activity.ui" = {}
# "omni.activity.freeze_monitor" = {}
"omni.activity.usd_resolver" = {}

# Warp
"omni.warp" = {}

# Ocean
"omni.ocean" = {}

# MetricsAssembler
"omni.usd.schema.metrics.assembler" = {}
"omni.usd.metrics.assembler.ui" = {}

# Waypoint Bundle
"omni.kit.waypoint.bundle" = {}

"omni.kit.stage.copypaste" = {}

# "omni.kit.welcome.about" = {}	# Temporarily disabling due to performance issues.

"omni.flowusd.bundle" = {}

"omni.kit.preferences.animation" = {}

"omni.kit.collaboration.stage_columns" = {}

# Variant
"omni.kit.variant.editor" = {}
"omni.kit.variant.presenter" = {}

"omni.anim.motion_path.bundle" = {}
"omni.anim.motion_path.core" = { version = "1.1.3", exact = true }
"omni.anim.motion_path.ui" = { version = "1.1.3", exact = true }

"omni.entity.spawn.bundle" = {}
"omni.entity.spawn.core" = {}

"omni.resourcemonitor" = {}

"omni.no_code_ui.bundle" = {}

"omni.kit.widget.cache_indicator" = {}

# WAR - load those 2 extensions otherwise they will get loaded by a task thread and it will deadlock (2 python threads)
"omni.hsscclient" = {}
# "omni.ujitso" = {}

# Shadercaches
"omni.rtx.shadercache.vulkan" = {}

"omni.videoencoding" = {}

"omni.mdl.usd_converter" = {}

# Cad Converter
"omni.kit.converter.cad" = { version = "200.1.1-rc.8", exact=true }
"omni.kit.converter.cad_core" = { version = "200.1.1-rc.10", exact=true }
"omni.kit.converter.common" = { version = "200.1.1-rc.4", exact=true }
"omni.kit.converter.jt_core" = { version = "200.1.1-rc.6", exact=true }











# Main python module this extension provides, it will be publicly available as "import pano_headless".
[[python.module]]
name = "pano_headless"

[[test]]
# Extra dependencies only to be used during test run
dependencies = [
    "omni.kit.ui_test" # UI testing extension
]


# Settings of our extension:
[settings.exts."pano_headless"]
# URL prefix where the service will be mounted, where our API will be available to handle incoming requests.
#
# Defining this as a setting makes it easy to change or rebrand the endpoint using only command-line or KIT-file
# configuration instructions, should extensions ever feature conflicting endpoint naming conventions.
url_prefix = "/viewport-capture"

# Path from where the captured images will be served from, when exposed to clients.
#
# This path will be mounted as a child of the `url_prefix` setting, and expressed as a formatted join of the
# `{url_prefix}{capture_path}` settings.
capture_path = ""

# Name of the directory on the server where captured images will be stored:
capture_directory = ""